version: "3.8"

services:
  # Database Service
  cameraservicesplatform.backend.database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: cameraservicesplatform.backend.db
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Root1234!"  # Strong SA password
    volumes:
      - cameraservicesplatform.backend.db:/var/opt/mssql  # Use a named volume for persistence
    ports:
      - "1433:1433"  # Expose SQL Server default port
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P 'Root1234!' -Q 'SELECT 1'"]
      interval: 10s
      retries: 5
      start_period: 40s
      timeout: 10s

  # API Service
  cameraservicesplatform.backend.api:
    build:
      context: .  # Path to the API project folder
      dockerfile: CameraServicesPlatform.BackEnd.API/Dockerfile  # Specify Dockerfile name
    depends_on:
      cameraservicesplatform.backend.database:
        condition: service_healthy  # Wait for the database to be healthy
    environment:
      ASPNETCORE_ENVIRONMENT: "Production"
      ConnectionStrings__DefaultConnection: "Server=cameraservicesplatform.backend.database,1433;Database=YourDatabaseName;User Id=sa;Password=Root1234!"  # Correct connection string
    ports:
      - "2602:8080"  # Map the HTTP port to 2602 on the VPS
    restart: always  # Restart the container on failure

volumes:
  cameraservicesplatform.backend.db:  # Use named volumes for persistence

