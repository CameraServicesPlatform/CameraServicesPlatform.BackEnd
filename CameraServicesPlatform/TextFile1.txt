//// <auto-generated />
//using System;
//using CameraServicesPlatform.BackEnd.Data;
//using Microsoft.EntityFrameworkCore;
//using Microsoft.EntityFrameworkCore.Infrastructure;
//using Microsoft.EntityFrameworkCore.Metadata;
//using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

//#nullable disable

//namespace CameraServicesPlatform.BackEnd.Domain.Migrations
//{
//    [DbContext(typeof(CameraServicesPlatformDbContext))]
//    partial class CameraServicesPlatformDbContextModelSnapshot : ModelSnapshot
//    {
//        protected override void BuildModel(ModelBuilder modelBuilder)
//        {
//#pragma warning disable 612, 618
//            modelBuilder
//                .HasAnnotation("ProductVersion", "8.0.8")
//                .HasAnnotation("Relational:MaxIdentifierLength", 128);

//            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Account", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<int>("AccessFailedCount")
//                        .HasColumnType("int");

//                    b.Property<string>("AccountHolder")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("AccountNumber")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Address")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("BackOfCitizenIdentificationCard")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("BankName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Email")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<bool>("EmailConfirmed")
//                        .HasColumnType("bit");

//                    b.Property<string>("FirstName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("FrontOfCitizenIdentificationCard")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("Gender")
//                        .HasColumnType("int");

//                    b.Property<int?>("Hobby")
//                        .HasColumnType("int");

//                    b.Property<string>("Img")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("IsDeleted")
//                        .HasColumnType("bit");

//                    b.Property<bool>("IsVerified")
//                        .HasColumnType("bit");

//                    b.Property<int?>("Job")
//                        .HasColumnType("int");

//                    b.Property<string>("LastName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("LockoutEnabled")
//                        .HasColumnType("bit");

//                    b.Property<DateTimeOffset?>("LockoutEnd")
//                        .HasColumnType("datetimeoffset");

//                    b.Property<string>("NormalizedEmail")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("NormalizedUserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("PasswordHash")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("PhoneNumber")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("PhoneNumberConfirmed")
//                        .HasColumnType("bit");

//                    b.Property<string>("RefreshToken")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime?>("RefreshTokenExpiryTime")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("SecurityStamp")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("StaffID")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("SupplierID")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("TwoFactorEnabled")
//                        .HasColumnType("bit");

//                    b.Property<string>("UserName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("VerifyCode")
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedEmail")
//                        .HasDatabaseName("EmailIndex");

//                    b.HasIndex("NormalizedUserName")
//                        .IsUnique()
//                        .HasDatabaseName("UserNameIndex")
//                        .HasFilter("[NormalizedUserName] IS NOT NULL");

//                    b.ToTable("AspNetUsers", (string)null);
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.CameraServicesPlatform.BackEnd.Domain.Models.ProductVoucher", b =>
//                {
//                    b.Property<Guid>("ProductVoucherID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsDisable")
//                        .HasColumnType("bit");

//                    b.Property<Guid>("ProductID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<Guid>("VourcherID")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("ProductVoucherID");

//                    b.HasIndex("ProductID");

//                    b.HasIndex("VourcherID");

//                    b.ToTable("ProductVouchers");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Category", b =>
//                {
//                    b.Property<Guid>("CategoryID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("CategoryDescription")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("CategoryName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("StatusCategory")
//                        .HasColumnType("bit");

//                    b.HasKey("CategoryID");

//                    b.ToTable("Categories");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ContractTemplate", b =>
//                {
//                    b.Property<Guid>("ContractTemplateId")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AccountID")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("ContractTerms")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("PenaltyPolicy")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("TemplateDetails")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("TemplateName")
//                        .IsRequired()
//                        .HasMaxLength(255)
//                        .HasColumnType("nvarchar(255)");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.HasKey("ContractTemplateId");

//                    b.HasIndex("AccountID");

//                    b.ToTable("ContractTemplates");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.DeliveriesMethod", b =>
//                {
//                    b.Property<Guid>("DeliveriesMethodID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Description")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("MethodName")
//                        .HasColumnType("int");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.HasKey("DeliveriesMethodID");

//                    b.ToTable("DeliveriesMethod");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Order", b =>
//                {
//                    b.Property<Guid>("OrderID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AccountId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<Guid?>("DeliveriesMethodID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<int>("DeliveryMethod")
//                        .HasColumnType("int");

//                    b.Property<int>("DurationUnit")
//                        .HasColumnType("int");

//                    b.Property<int>("DurationValue")
//                        .HasColumnType("int");

//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("OrderDate")
//                        .HasColumnType("datetime2");

//                    b.Property<Guid?>("OrderDetailID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<int>("OrderStatus")
//                        .HasColumnType("int");

//                    b.Property<int>("OrderType")
//                        .HasColumnType("int");

//                    b.Property<DateTime?>("RentalEndDate")
//                        .HasColumnType("datetime2");

//                    b.Property<DateTime?>("RentalStartDate")
//                        .HasColumnType("datetime2");

//                    b.Property<DateTime?>("ReturnDate")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("ShippingAddress")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<Guid>("SupplierID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<double?>("TotalAmount")
//                        .HasColumnType("float");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.HasKey("OrderID");

//                    b.HasIndex("AccountId");

//                    b.HasIndex("DeliveriesMethodID");

//                    b.HasIndex("SupplierID");

//                    b.ToTable("Orders");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.OrderDetail", b =>
//                {
//                    b.Property<Guid>("OrderDetailsID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<double>("Discount")
//                        .HasColumnType("float");

//                    b.Property<Guid>("OrderID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<Guid>("ProductID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<double>("ProductPrice")
//                        .HasColumnType("float");

//                    b.Property<double>("ProductPriceTotal")
//                        .HasColumnType("float");

//                    b.Property<string>("ProductQuality")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int?>("RentalPeriod")
//                        .HasColumnType("int");

//                    b.HasKey("OrderDetailsID");

//                    b.HasIndex("OrderID");

//                    b.HasIndex("ProductID");

//                    b.ToTable("OrderDetails");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Policy", b =>
//                {
//                    b.Property<Guid>("PolicyID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<int>("ApplicableObject")
//                        .HasColumnType("int");

//                    b.Property<DateTime>("EffectiveDate")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsDisable")
//                        .HasColumnType("bit");

//                    b.Property<string>("PolicyContent")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("PolicyType")
//                        .HasColumnType("int");

//                    b.Property<DateTime>("Value")
//                        .HasColumnType("datetime2");

//                    b.HasKey("PolicyID");

//                    b.ToTable("Policies");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ProductImage", b =>
//                {
//                    b.Property<Guid>("ProductImagesID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("Image")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<Guid>("ProductID")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("ProductImagesID");

//                    b.HasIndex("ProductID");

//                    b.ToTable("ProductImages");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ProductReport", b =>
//                {
//                    b.Property<Guid>("ProductReportID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("Account")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("AccountID")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<DateTime?>("EndDate")
//                        .HasColumnType("datetime2");

//                    b.Property<Guid>("ProductID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("Reason")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("StartDate")
//                        .HasColumnType("datetime2");

//                    b.Property<int>("StatusType")
//                        .HasColumnType("int");

//                    b.Property<Guid>("SupplierID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.HasKey("ProductReportID");

//                    b.HasIndex("Account");

//                    b.HasIndex("ProductID");

//                    b.HasIndex("SupplierID");

//                    b.ToTable("ProductReports");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ProductSpecification", b =>
//                {
//                    b.Property<Guid>("ProductSpecificationID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("Details")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<Guid>("ProductID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("Specification")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("ProductSpecificationID");

//                    b.HasIndex("ProductID");

//                    b.ToTable("ProductSpecifications");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Rating", b =>
//                {
//                    b.Property<Guid>("RatingID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AccountID")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsDisable")
//                        .HasColumnType("bit");

//                    b.Property<Guid>("ProductID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<int>("RatingValue")
//                        .HasColumnType("int");

//                    b.Property<string>("ReviewComment")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("RatingID");

//                    b.HasIndex("AccountID");

//                    b.HasIndex("ProductID");

//                    b.ToTable("Ratings");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Report", b =>
//                {
//                    b.Property<Guid>("ReportID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AccountId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime>("ReportDate")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("ReportDetails")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("ReportType")
//                        .HasColumnType("int");

//                    b.Property<int>("Status")
//                        .HasColumnType("int");

//                    b.HasKey("ReportID");

//                    b.HasIndex("AccountId");

//                    b.ToTable("Reports");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ReturnDetail", b =>
//                {
//                    b.Property<Guid>("ReturnID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("Condition")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsDisable")
//                        .HasColumnType("bit");

//                    b.Property<Guid>("OrderID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<double>("PenaltyApplied")
//                        .HasColumnType("float");

//                    b.Property<DateTime>("ReturnDate")
//                        .HasColumnType("datetime2");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.HasKey("ReturnID");

//                    b.HasIndex("OrderID");

//                    b.ToTable("ReturnDetails");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Staff", b =>
//                {
//                    b.Property<Guid>("StaffID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AccountID")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Department")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("HireDate")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Img")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("IsAdmin")
//                        .HasColumnType("bit");

//                    b.Property<bool>("IsDisable")
//                        .HasColumnType("bit");

//                    b.Property<string>("JobTitle")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Name")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("StaffStatus")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.HasKey("StaffID");

//                    b.HasIndex("AccountID")
//                        .IsUnique();

//                    b.ToTable("Staffs");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.SupplierReport", b =>
//                {
//                    b.Property<Guid>("SupplierReportID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AccountID")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime?>("EndDate")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Reason")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<Guid>("StaffID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("StartDate")
//                        .HasColumnType("datetime2");

//                    b.Property<int>("StatusType")
//                        .HasColumnType("int");

//                    b.Property<Guid>("SupplierID")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("SupplierReportID");

//                    b.HasIndex("AccountID");

//                    b.HasIndex("StaffID");

//                    b.HasIndex("SupplierID");

//                    b.ToTable("SupplierReports");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Vourcher", b =>
//                {
//                    b.Property<Guid>("VourcherID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Description")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<double>("DiscountAmount")
//                        .HasColumnType("float");

//                    b.Property<DateTime>("ExpirationDate")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsActive")
//                        .HasColumnType("bit");

//                    b.Property<Guid?>("SupplierID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<DateTime>("ValidFrom")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("VourcherCode")
//                        .IsRequired()
//                        .HasMaxLength(50)
//                        .HasColumnType("nvarchar(50)");

//                    b.HasKey("VourcherID");

//                    b.ToTable("Vourchers");
//                });

//            modelBuilder.Entity("Contract", b =>
//                {
//                    b.Property<Guid>("ContractID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<Guid>("ContractTemplateId")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("ContractTerms")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<Guid>("OrderID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("PenaltyPolicy")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.HasKey("ContractID");

//                    b.HasIndex("ContractTemplateId");

//                    b.HasIndex("OrderID");

//                    b.ToTable("Contracts");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
//                {
//                    b.Property<string>("Id")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("ConcurrencyStamp")
//                        .IsConcurrencyToken()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Name")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.Property<string>("NormalizedName")
//                        .HasMaxLength(256)
//                        .HasColumnType("nvarchar(256)");

//                    b.HasKey("Id");

//                    b.HasIndex("NormalizedName")
//                        .IsUnique()
//                        .HasDatabaseName("RoleNameIndex")
//                        .HasFilter("[NormalizedName] IS NOT NULL");

//                    b.ToTable("AspNetRoles", (string)null);

//                    b.HasData(
//                        new
//                        {
//                            Id = "1cf2de31-b0d8-4447-8f2f-c41df905a3a5",
//                            ConcurrencyStamp = "1cf2de31-b0d8-4447-8f2f-c41df905a3a5",
//                            Name = "ADMIN",
//                            NormalizedName = "admin"
//                        },
//                        new
//                        {
//                            Id = "e64b36a7-ed67-47d2-b92e-d2f6caa3eda9",
//                            ConcurrencyStamp = "e64b36a7-ed67-47d2-b92e-d2f6caa3eda9",
//                            Name = "MEMBER",
//                            NormalizedName = "member"
//                        },
//                        new
//                        {
//                            Id = "086b7a13-79af-4610-851d-204d9d84b865",
//                            ConcurrencyStamp = "086b7a13-79af-4610-851d-204d9d84b865",
//                            Name = "STAFF",
//                            NormalizedName = "staff"
//                        },
//                        new
//                        {
//                            Id = "74bd6d3a-1119-449b-9743-3956d74e7575",
//                            ConcurrencyStamp = "74bd6d3a-1119-449b-9743-3956d74e7575",
//                            Name = "SUPPLIER",
//                            NormalizedName = "supplier"
//                        });
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("RoleId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetRoleClaims", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.Property<int>("Id")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("int");

//                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

//                    b.Property<string>("ClaimType")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ClaimValue")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("Id");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserClaims", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("ProviderKey")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("ProviderDisplayName")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("UserId")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("LoginProvider", "ProviderKey");

//                    b.HasIndex("UserId");

//                    b.ToTable("AspNetUserLogins", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("RoleId")
//                        .HasColumnType("nvarchar(450)");

//                    b.HasKey("UserId", "RoleId");

//                    b.HasIndex("RoleId");

//                    b.ToTable("AspNetUserRoles", (string)null);
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.Property<string>("UserId")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("LoginProvider")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("Name")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("Value")
//                        .HasColumnType("nvarchar(max)");

//                    b.HasKey("UserId", "LoginProvider", "Name");

//                    b.ToTable("AspNetUserTokens", (string)null);
//                });

//            modelBuilder.Entity("Product", b =>
//                {
//                    b.Property<Guid>("ProductID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<int?>("Brand")
//                        .HasColumnType("int");

//                    b.Property<Guid?>("CategoryID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<double?>("PriceBuy")
//                        .HasColumnType("float");

//                    b.Property<double?>("PriceRent")
//                        .HasColumnType("float");

//                    b.Property<string>("ProductDescription")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("ProductName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("Quality")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<double>("Rating")
//                        .HasColumnType("float");

//                    b.Property<string>("SerialNumber")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("Status")
//                        .HasColumnType("int");

//                    b.Property<Guid?>("SupplierID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.HasKey("ProductID");

//                    b.HasIndex("CategoryID");

//                    b.HasIndex("SupplierID");

//                    b.ToTable("Products");
//                });

//            modelBuilder.Entity("Supplier", b =>
//                {
//                    b.Property<Guid>("SupplierID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<double>("AccountBalance")
//                        .HasColumnType("float");

//                    b.Property<string>("AccountID")
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<string>("BlockReason")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime?>("BlockedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("ContactNumber")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("Img")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<bool>("IsDisable")
//                        .HasColumnType("bit");

//                    b.Property<string>("SupplierAddress")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("SupplierDescription")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("SupplierLogo")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<string>("SupplierName")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<DateTime>("UpdatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<Guid?>("VourcherID")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("SupplierID");

//                    b.HasIndex("AccountID")
//                        .IsUnique()
//                        .HasFilter("[AccountID] IS NOT NULL");

//                    b.ToTable("Suppliers");
//                });

//            modelBuilder.Entity("SupplierRequest", b =>
//                {
//                    b.Property<Guid>("SupplierRequestID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<DateTime>("RequestDate")
//                        .HasColumnType("datetime2");

//                    b.Property<string>("RequestDetails")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int>("RequestStatus")
//                        .HasColumnType("int");

//                    b.Property<int>("RequestType")
//                        .HasColumnType("int");

//                    b.Property<Guid>("SupplierID")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("SupplierRequestID");

//                    b.HasIndex("SupplierID");

//                    b.ToTable("SupplierRequests");
//                });

//            modelBuilder.Entity("Transaction", b =>
//                {
//                    b.Property<Guid>("TransactionID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AccountID")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<double>("Amount")
//                        .HasColumnType("float");

//                    b.Property<Guid>("OrderID")
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<int>("PaymentMethod")
//                        .HasColumnType("int");

//                    b.Property<int>("PaymentStatus")
//                        .HasColumnType("int");

//                    b.Property<DateTime>("TransactionDate")
//                        .HasColumnType("datetime2");

//                    b.Property<int>("TransactionType")
//                        .HasColumnType("int");

//                    b.Property<string>("VNPAYTransactionID")
//                        .HasColumnType("nvarchar(max)");

//                    b.Property<int?>("VNPAYTransactionStatus")
//                        .HasColumnType("int");

//                    b.Property<DateTime?>("VNPAYTransactionTime")
//                        .HasColumnType("datetime2");

//                    b.HasKey("TransactionID");

//                    b.HasIndex("AccountID");

//                    b.HasIndex("OrderID")
//                        .IsUnique();

//                    b.ToTable("Transactions");
//                });

//            modelBuilder.Entity("Wishlist", b =>
//                {
//                    b.Property<Guid>("WishlistID")
//                        .ValueGeneratedOnAdd()
//                        .HasColumnType("uniqueidentifier");

//                    b.Property<string>("AccountID")
//                        .IsRequired()
//                        .HasColumnType("nvarchar(450)");

//                    b.Property<DateTime>("CreatedAt")
//                        .HasColumnType("datetime2");

//                    b.Property<bool>("IsDisable")
//                        .HasColumnType("bit");

//                    b.Property<Guid>("ProductID")
//                        .HasColumnType("uniqueidentifier");

//                    b.HasKey("WishlistID");

//                    b.HasIndex("AccountID");

//                    b.HasIndex("ProductID");

//                    b.ToTable("Wishlists");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.CameraServicesPlatform.BackEnd.Domain.Models.ProductVoucher", b =>
//                {
//                    b.HasOne("Product", "Product")
//                        .WithMany()
//                        .HasForeignKey("ProductID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Vourcher", "Vourcher")
//                        .WithMany()
//                        .HasForeignKey("VourcherID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Product");

//                    b.Navigation("Vourcher");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ContractTemplate", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithMany()
//                        .HasForeignKey("AccountID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Account");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Order", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithMany()
//                        .HasForeignKey("AccountId");

//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.DeliveriesMethod", "DeliveriesMethod")
//                        .WithMany()
//                        .HasForeignKey("DeliveriesMethodID");

//                    b.HasOne("Supplier", "Supplier")
//                        .WithMany()
//                        .HasForeignKey("SupplierID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Account");

//                    b.Navigation("DeliveriesMethod");

//                    b.Navigation("Supplier");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.OrderDetail", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Order", "Order")
//                        .WithMany("OrderDetail")
//                        .HasForeignKey("OrderID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Product", "Product")
//                        .WithMany()
//                        .HasForeignKey("ProductID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Order");

//                    b.Navigation("Product");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ProductImage", b =>
//                {
//                    b.HasOne("Product", "Product")
//                        .WithMany()
//                        .HasForeignKey("ProductID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Product");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ProductReport", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "HandledBy")
//                        .WithMany()
//                        .HasForeignKey("Account");

//                    b.HasOne("Product", "Product")
//                        .WithMany()
//                        .HasForeignKey("ProductID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Supplier", "Supplier")
//                        .WithMany()
//                        .HasForeignKey("SupplierID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("HandledBy");

//                    b.Navigation("Product");

//                    b.Navigation("Supplier");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ProductSpecification", b =>
//                {
//                    b.HasOne("Product", "Product")
//                        .WithMany()
//                        .HasForeignKey("ProductID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Product");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Rating", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithMany()
//                        .HasForeignKey("AccountID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Product", "Product")
//                        .WithMany()
//                        .HasForeignKey("ProductID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Account");

//                    b.Navigation("Product");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Report", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithMany()
//                        .HasForeignKey("AccountId");

//                    b.Navigation("Account");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.ReturnDetail", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Order", "Order")
//                        .WithMany()
//                        .HasForeignKey("OrderID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Order");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Staff", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithOne("Staff")
//                        .HasForeignKey("CameraServicesPlatform.BackEnd.Domain.Models.Staff", "AccountID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Account");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.SupplierReport", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithMany()
//                        .HasForeignKey("AccountID");

//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Staff", "Staff")
//                        .WithMany()
//                        .HasForeignKey("StaffID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Supplier", "Supplier")
//                        .WithMany()
//                        .HasForeignKey("SupplierID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Account");

//                    b.Navigation("Staff");

//                    b.Navigation("Supplier");
//                });

//            modelBuilder.Entity("Contract", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.ContractTemplate", "ContractTemplate")
//                        .WithMany()
//                        .HasForeignKey("ContractTemplateId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Order", "Order")
//                        .WithMany()
//                        .HasForeignKey("OrderID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("ContractTemplate");

//                    b.Navigation("Order");
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
//                {
//                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
//                        .WithMany()
//                        .HasForeignKey("RoleId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", null)
//                        .WithMany()
//                        .HasForeignKey("UserId")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();
//                });

//            modelBuilder.Entity("Product", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Category", "Category")
//                        .WithMany()
//                        .HasForeignKey("CategoryID");

//                    b.HasOne("Supplier", "Supplier")
//                        .WithMany()
//                        .HasForeignKey("SupplierID");

//                    b.Navigation("Category");

//                    b.Navigation("Supplier");
//                });

//            modelBuilder.Entity("Supplier", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithOne("Supplier")
//                        .HasForeignKey("Supplier", "AccountID");

//                    b.Navigation("Account");
//                });

//            modelBuilder.Entity("SupplierRequest", b =>
//                {
//                    b.HasOne("Supplier", "Supplier")
//                        .WithMany()
//                        .HasForeignKey("SupplierID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Supplier");
//                });

//            modelBuilder.Entity("Transaction", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithMany()
//                        .HasForeignKey("AccountID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Order", "Order")
//                        .WithOne("Transaction")
//                        .HasForeignKey("Transaction", "OrderID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Account");

//                    b.Navigation("Order");
//                });

//            modelBuilder.Entity("Wishlist", b =>
//                {
//                    b.HasOne("CameraServicesPlatform.BackEnd.Domain.Models.Account", "Account")
//                        .WithMany()
//                        .HasForeignKey("AccountID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.HasOne("Product", "Product")
//                        .WithMany()
//                        .HasForeignKey("ProductID")
//                        .OnDelete(DeleteBehavior.Cascade)
//                        .IsRequired();

//                    b.Navigation("Account");

//                    b.Navigation("Product");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Account", b =>
//                {
//                    b.Navigation("Staff");

//                    b.Navigation("Supplier");
//                });

//            modelBuilder.Entity("CameraServicesPlatform.BackEnd.Domain.Models.Order", b =>
//                {
//                    b.Navigation("OrderDetail");

//                    b.Navigation("Transaction");
//                });
//#pragma warning restore 612, 618
//        }
//    }
//}
